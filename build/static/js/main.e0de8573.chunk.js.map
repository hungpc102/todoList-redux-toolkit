{"version":3,"sources":["components/TodoList/todoListSlice.js","components/Todo/index.js","redux/selector.js","components/TodoList/index.js","components/Filters/filtersSlice.js","components/Filters/index.js","App.js","redux/store.js","index.js"],"names":["createSlice","name","initialState","id","completed","priority","reducers","addTodo","state","action","push","payload","toggleTodoStatus","currentTodo","find","todo","priorityColorMapping","High","Medium","Low","Todo","useState","checked","setChecked","dispatch","useDispatch","justify","style","marginBottom","opacity","textDecoration","onChange","TodoListSlice","actions","color","margin","todosRemainingSelector","createSelector","todoList","filters","status","search","priorities","searchText","filter","length","includes","TodoList","todoName","setTodoName","setPriority","useSelector","height","span","overflowY","map","Group","display","compact","value","e","target","defaultValue","Option","label","type","onClick","todoListSlice","uuidv4","searchFilterChange","statusFilterChange","prioritiesFilterChange","Search","Input","Filters","setSearchText","filterStatus","setFilterStatus","filterPriorities","setFilterPriorities","Paragraph","fontWeight","marginTop","placeholder","console","log","filtersSlice","sm","mode","allowClear","width","Title","Typography","App","flexDirection","backgroundColor","padding","boxShadow","borderRadius","textAlign","store","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e0de8573.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nexport default createSlice({\n  name: \"todoList\",\n  initialState: [\n    { id: 1, name: \"Learn Yoga\", completed: false, priority: \"Medium\" },\n    { id: 2, name: \"Learn Redux\", completed: true, priority: \"High\" },\n    { id: 3, name: \"Learn JavaScript\", completed: false, priority: \"Low\" },\n  ],\n  reducers: {\n    addTodo: (state, action) => {\n      state.push(action.payload);\n    },\n    toggleTodoStatus: (state, action) => {\n      const currentTodo = state.find((todo) => todo.id === action.payload);\n      if (currentTodo) {\n        currentTodo.completed = !currentTodo.completed;\n      }\n    }\n  }\n});\n","import { Row, Tag, Checkbox } from 'antd';\r\nimport { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport TodoListSlice from '../TodoList/todoListSlice';\r\n\r\nconst priorityColorMapping = {\r\n  High: 'red',\r\n  Medium: 'blue',\r\n  Low: 'gray',\r\n};\r\n\r\nexport default function Todo({ name, priority, completed, id }) {\r\n  const [checked, setChecked] = useState(completed);\r\n  const dispatch = useDispatch()\r\n\r\n  const toggleCheckbox = () => {\r\n    setChecked(!checked);\r\n    dispatch(TodoListSlice.actions.toggleTodoStatus(id))\r\n  };\r\n\r\n  return (\r\n    <Row\r\n      justify='space-between'\r\n      style={{\r\n        marginBottom: 3,\r\n        ...(checked ? { opacity: 0.5, textDecoration: 'line-through' } : {}),\r\n      }}\r\n    >\r\n      <Checkbox checked={checked} onChange={toggleCheckbox}>\r\n        {name}\r\n      </Checkbox>\r\n      <Tag color={priorityColorMapping[priority]} style={{ margin: 0 }}>\r\n        {priority}\r\n      </Tag>\r\n    </Row>\r\n  );\r\n}\r\n","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const searchTextSelector = (state) => state.filters.search;\n\nexport const todoListSelector = (state) => state.todoList;\n\nexport const filterStatusSelector = (state) => state.filters.status;\n\nexport const filterPrioritiesSelector = (state) => state.filters.priorities;\n\nexport const todosRemainingSelector = createSelector(\n  todoListSelector,\n  filterStatusSelector,\n  searchTextSelector,\n  filterPrioritiesSelector,\n  (todoList, status, searchText, priorities) => {\n    return todoList.filter((todo) => {\n      if (status === \"All\") {\n        return priorities.length\n          ? todo.name.includes(searchText) &&\n              priorities.includes(todo.priority)  \n          : todo.name.includes(searchText);\n      }\n      return (\n        todo.name.includes(searchText) &&\n        (status === \"Completed\" ? todo.completed : !todo.completed) &&\n        (priorities.length? priorities.includes(todo.priority) : true)\n      );\n    });\n  }\n);\n","import { Col, Row, Input, Button, Select, Tag } from \"antd\";\r\nimport Todo from \"../Todo\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { useState } from \"react\";\r\nimport { todosRemainingSelector } from \"../../redux/selector\";\r\nimport todoListSlice from \"./todoListSlice\";\r\n\r\nexport default function TodoList() {\r\n  const [todoName, setTodoName] = useState(\"\");\r\n  const [priority, setPriority] = useState(\"Medium\");\r\n\r\n  const todoList = useSelector(todosRemainingSelector);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleAddButtonClick = () => {\r\n    dispatch(\r\n      todoListSlice.actions.addTodo({\r\n        id: uuidv4(),\r\n        name: todoName,\r\n        priority: priority,\r\n        completed: false,\r\n      })\r\n    );\r\n\r\n    setTodoName(\"\");\r\n    setPriority(\"Medium\");\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    setTodoName(e.target.value);\r\n  };\r\n\r\n  const handlePriorityChange = (value) => {\r\n    setPriority(value);\r\n  };\r\n\r\n  return (\r\n    <Row style={{ height: \"calc(100% - 40px)\" }}>\r\n      <Col span={24} style={{ height: \"calc(100% - 40px)\", overflowY: \"auto\" }}>\r\n        {todoList.map((todo) => (\r\n          <Todo\r\n            key={todo.id}\r\n            id={todo.id}\r\n            name={todo.name}\r\n            priority={todo.priority}\r\n            completed={todo.completed}\r\n          />\r\n        ))}\r\n      </Col>\r\n      <Col span={24}>\r\n        <Input.Group style={{ display: \"flex\" }} compact>\r\n          <Input value={todoName} onChange={handleInputChange} />\r\n          <Select\r\n            defaultValue=\"Medium\"\r\n            value={priority}\r\n            onChange={handlePriorityChange}\r\n          >\r\n            <Select.Option value=\"High\" label=\"High\">\r\n              <Tag color=\"red\">High</Tag>\r\n            </Select.Option>\r\n            <Select.Option value=\"Medium\" label=\"Medium\">\r\n              <Tag color=\"blue\">Medium</Tag>\r\n            </Select.Option>\r\n            <Select.Option value=\"Low\" label=\"Low\">\r\n              <Tag color=\"gray\">Low</Tag>\r\n            </Select.Option>\r\n          </Select>\r\n          <Button type=\"primary\" onClick={handleAddButtonClick}>\r\n            Add\r\n          </Button>\r\n        </Input.Group>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport default createSlice({\n  name: \"filter\",\n  initialState: {\n    search: \"\",\n    status: \"All\",\n    priorities: [],\n  },\n  reducers: {\n    searchFilterChange: (state, action) => {\n      state.search = action.payload;\n    },\n    statusFilterChange: (state, action) => {\n      state.status = action.payload;\n    },\n    prioritiesFilterChange: (state, action) => {\n      state.priorities = action.payload\n    },\n  },\n});\n","import { Col, Row, Input, Typography, Radio, Select, Tag } from \"antd\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport filtersSlice from \"./filtersSlice\";\r\nconst { Search } = Input;\r\n\r\nexport default function Filters() {\r\n  const dispatch = useDispatch();\r\n\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [filterStatus, setFilterStatus] = useState(\"All\");\r\n  const [filterPriorities, setFilterPriorities] = useState([]);\r\n\r\n  const handleSearchTextChange = (e) => {\r\n    console.log(\"handleSearchTextChange\", { e });\r\n    setSearchText(e.target.value);\r\n    dispatch(filtersSlice.actions.searchFilterChange(e.target.value));\r\n  };\r\n\r\n  const handleStatusChange = (e) => {\r\n    setFilterStatus(e.target.value);\r\n    dispatch(filtersSlice.actions.statusFilterChange(e.target.value));\r\n  };\r\n\r\n  const handlePriorityChange = (value) => {\r\n    setFilterPriorities(value)\r\n    dispatch(filtersSlice.actions.prioritiesFilterChange(value));\r\n  };\r\n\r\n  return (\r\n    <Row justify=\"center\">\r\n      <Col span={24}>\r\n        <Typography.Paragraph\r\n          style={{ fontWeight: \"bold\", marginBottom: 3, marginTop: 10 }}\r\n        >\r\n          Search\r\n        </Typography.Paragraph>\r\n        <Search\r\n          placeholder=\"input search text\"\r\n          value={searchText}\r\n          onChange={handleSearchTextChange}\r\n        />\r\n      </Col>\r\n      <Col sm={24}>\r\n        <Typography.Paragraph\r\n          style={{ fontWeight: \"bold\", marginBottom: 3, marginTop: 10 }}\r\n        >\r\n          Filter By Status\r\n        </Typography.Paragraph>\r\n        <Radio.Group value={filterStatus} onChange={handleStatusChange}>\r\n          <Radio value=\"All\">All</Radio>\r\n          <Radio value=\"Completed\">Completed</Radio>\r\n          <Radio value=\"Todo\">To do</Radio>\r\n        </Radio.Group>\r\n      </Col>\r\n      <Col sm={24}>\r\n        <Typography.Paragraph\r\n          style={{ fontWeight: \"bold\", marginBottom: 3, marginTop: 10 }}\r\n        >\r\n          Filter By Priority\r\n        </Typography.Paragraph>\r\n        <Select\r\n          mode=\"multiple\"\r\n          allowClear\r\n          value={filterPriorities}\r\n          onChange={handlePriorityChange}\r\n          placeholder=\"Please select\"\r\n          style={{ width: \"100%\" }}\r\n        >\r\n          <Select.Option value=\"High\" label=\"High\">\r\n            <Tag color=\"red\">High</Tag>\r\n          </Select.Option>\r\n          <Select.Option value=\"Medium\" label=\"Medium\">\r\n            <Tag color=\"blue\">Medium</Tag>\r\n          </Select.Option>\r\n          <Select.Option value=\"Low\" label=\"Low\">\r\n            <Tag color=\"gray\">Low</Tag>\r\n          </Select.Option>\r\n        </Select>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n","import { Typography, Divider } from 'antd';\nimport './App.css';\nimport TodoList from './components/TodoList';\nimport Filters from './components/Filters';\n\nconst { Title } = Typography;\n\nfunction App() {\n  return (\n    <div\n      style={{\n        width: 500,\n        margin: '0 auto',\n        display: 'flex',\n        flexDirection: 'column',\n        backgroundColor: 'white',\n        padding: 20,\n        boxShadow: '0 0 10px 4px #bfbfbf',\n        borderRadius: 5,\n        height: '90vh',\n      }}\n    >\n      <Title style={{ textAlign: 'center' }}>TODO APP with REDUX</Title>\n      <Filters />\n      <Divider />\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","// import {createStore} from 'redux'\n// import rootReducer from './reducer'\n// import { composeWithDevTools } from 'redux-devtools-extension'\n\n// const composedEnhancers = composeWithDevTools()\n\n// const store = createStore(rootReducer, composedEnhancers)\n\n// export default store\n\n\nimport filtersSlice from \"../components/Filters/filtersSlice\"\nimport todoListSlice from \"../components/TodoList/todoListSlice\"\n\nimport {configureStore} from '@reduxjs/toolkit'\n\nconst store = configureStore({\n    reducer:{\n        filters: filtersSlice.reducer,\n        todoList: todoListSlice.reducer\n    }\n})\n\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n );"],"sourceRoot":""}